# -*- coding: utf-8 -*-
"""Pratica5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-PmQg-2jfNSvQ60OswaENK4h-oV00f6P

Efeitos de alargamento de linhas
"""

import numpy as np
import matplotlib.pyplot as plt

"""Gravidades Diferentes e Mesma Velocidade de Microturbulência: g5v1 e g0v1"""

# Parâmetros fixos
teff = 8000
asalog = 0.0
llzero = 5150.0
llfin = 5200.0
mg = 7.55
vvt = 1.0

# Parâmetros que divergem
glog_g0v1 = 0.0
glog_g5v1 = 5.0

# Carregar os dados dos espectros
wavelengths_g5_v1_Mg0, flux_g5_v1_Mg0 = np.loadtxt('f_g5_v1_Mg0.spec.nulbad.0.050', unpack=True)
wavelengths_g0_v1_Mg0, flux_g0_v1_Mg0 = np.loadtxt('f_g0_v1_Mg0.spec.nulbad.0.050', unpack=True)

# Normalizar os fluxos
flux_g5_v1_Mg0 /= np.max(flux_g5_v1_Mg0)
flux_g0_v1_Mg0 /= np.max(flux_g0_v1_Mg0)

plt.figure(figsize=(10, 6))

plt.plot(wavelengths_g5_v1_Mg0, flux_g5_v1_Mg0, color='magenta', linewidth=0.8, label='g5_v1_Mg0 | glog = 5.0')
plt.plot(wavelengths_g0_v1_Mg0, flux_g0_v1_Mg0, color='cyan', linewidth=0.8, label='g0_v1_Mg0 | glog = 0.0')

plt.xlabel("Comprimento de Onda (Å)")
plt.ylabel('Fluxo')
plt.title('Espectros com Gravidades Diferentes e Mesma Velocidade de Microturbulência')
plt.legend()
plt.grid(True)
plt.show()

# ZOOM

# Parâmetros fixos
teff = 8000
asalog = 0.0
llzero = 5150.0
llfin = 5200.0
mg = 7.55
vvt = 1.0

# Parâmetros que divergem
glog_v1 = 0.0
glog_v5 = 5.0

# Carregar os dados dos espectros
wavelengths_g5_v1_Mg0, flux_g5_v1_Mg0 = np.loadtxt('f_g5_v1_Mg0.spec.nulbad.0.050', unpack=True)
wavelengths_g0_v1_Mg0, flux_g0_v1_Mg0 = np.loadtxt('f_g0_v1_Mg0.spec.nulbad.0.050', unpack=True)

# Normalizar os fluxos
flux_g5_v1_Mg0 /= np.max(flux_g5_v1_Mg0)
flux_g0_v1_Mg0 /= np.max(flux_g0_v1_Mg0)

# Definir a região de zoom em torno de 5172.684 Å
zoom_wavelength_start = 5170.0
zoom_wavelength_end = 5175.0

# Encontrar os índices correspondentes à região de zoom
zoom_indices_g5_v1_Mg0 = np.where((wavelengths_g5_v1_Mg0 >= zoom_wavelength_start) & (wavelengths_g5_v1_Mg0 <= zoom_wavelength_end))
zoom_indices_g0_v1_Mg0 = np.where((wavelengths_g0_v1_Mg0 >= zoom_wavelength_start) & (wavelengths_g0_v1_Mg0 <= zoom_wavelength_end))

# Criar o gráfico para ambos os espectros com zoom na região desejada
plt.figure(figsize=(10, 6))

plt.plot(wavelengths_g5_v1_Mg0[zoom_indices_g5_v1_Mg0], flux_g5_v1_Mg0[zoom_indices_g5_v1_Mg0], color='magenta', linewidth=1.2, label='g5_v1_Mg0 | glog = 5.0')
plt.plot(wavelengths_g0_v1_Mg0[zoom_indices_g0_v1_Mg0], flux_g0_v1_Mg0[zoom_indices_g0_v1_Mg0], color='cyan', linewidth=1.2, label='g0_v1_Mg0 | glog = 0.0')

plt.xlabel("Comprimento de Onda (Å)")
plt.ylabel('Fluxo Normalizado')
plt.title('Zoom em 5172.684 Å | Gravidades Diferentes')
plt.legend()
plt.grid(True)
plt.show()

"""Diferentes Velocidades de Microturbulência e Mesma Gravidade: g5v1 e g5v3"""

#G5V1 E G5V3

# Parâmetros fixos
teff = 8000
asalog = 0.0
llzero = 5150.0
llfin = 5200.0
mg = 7.55
glog = 5.0

# Parâmetros que divergem
vvt_g5v1 = 1.0
vvt_g5v3 = 3.0

# Carregar os dados dos espectros
wavelengths_g5_v1_Mg0, flux_g5_v1_Mg0 = np.loadtxt('f_g5_v1_Mg0.spec.nulbad.0.050', unpack=True)
wavelengths_g5_v3_Mg0, flux_g5_v3_Mg0 = np.loadtxt('f_g5_v3_Mg0.spec.nulbad.0.050', unpack=True)

# Normalizar os fluxos
flux_g5_v1_Mg0 /= np.max(flux_g5_v1_Mg0)
flux_g5_v3_Mg0 /= np.max(flux_g5_v3_Mg0)

# Criar o gráfico para ambos os espectros normalizados
plt.figure(figsize=(10, 6))

plt.plot(wavelengths_g5_v1_Mg0, flux_g5_v1_Mg0, color='springgreen', linewidth=0.8, label='g5_v1_Mg0 | vvt = 1.0')
plt.plot(wavelengths_g5_v3_Mg0, flux_g5_v3_Mg0, color='darkviolet', linewidth=0.8, label='g5_v3_Mg0 | vvt = 3.0')

plt.xlabel("Comprimento de Onda (Å)")
plt.ylabel('Fluxo Normalizado')
plt.title('Espectros com Diferentes Velocidades de Microturbulência e Mesma Gravidade')
plt.legend()
plt.grid(True)
plt.show()

#G5V1 E G5V3 ZOOM

# Parâmetros fixos
teff = 8000
asalog = 0.0
llzero = 5150.0
llfin = 5200.0
mg = 7.55
glog = 5.0

# Parâmetros que divergem
vvt_g5v1 = 1.0
vvt_g5v3 = 3.0

# Carregar os dados dos espectros
wavelengths_g5_v1_Mg0, flux_g5_v1_Mg0 = np.loadtxt('f_g5_v1_Mg0.spec.nulbad.0.050', unpack=True)
wavelengths_g5_v3_Mg0, flux_g5_v3_Mg0 = np.loadtxt('f_g5_v3_Mg0.spec.nulbad.0.050', unpack=True)

# Normalizar os fluxos
flux_g5_v1_Mg0 /= np.max(flux_g5_v1_Mg0)
flux_g5_v3_Mg0 /= np.max(flux_g5_v3_Mg0)

# Definir a região de zoom em torno de 5172.684 Å
zoom_wavelength_start = 5170.0
zoom_wavelength_end = 5175.0

# Encontrar os índices correspondentes à região de zoom
zoom_indices_g5_v1_Mg0 = np.where((wavelengths_g5_v1_Mg0 >= zoom_wavelength_start) & (wavelengths_g5_v1_Mg0 <= zoom_wavelength_end))
zoom_indices_g5_v3_Mg0 = np.where((wavelengths_g5_v3_Mg0 >= zoom_wavelength_start) & (wavelengths_g5_v3_Mg0 <= zoom_wavelength_end))

# Criar o gráfico para ambos os espectros com zoom na região desejada
plt.figure(figsize=(10, 6))

plt.plot(wavelengths_g5_v1_Mg0[zoom_indices_g5_v1_Mg0], flux_g5_v1_Mg0[zoom_indices_g5_v1_Mg0], color='springgreen', linewidth=1.2 , label='g5_v1_Mg0 | vvt = 1.0')
plt.plot(wavelengths_g5_v3_Mg0[zoom_indices_g5_v3_Mg0], flux_g5_v3_Mg0[zoom_indices_g5_v3_Mg0], color='darkviolet', linewidth=1.2 , label='g5_v3_Mg0 | vvt = 3.0')

plt.xlabel("Comprimento de Onda (Å)")
plt.ylabel('Fluxo Normalizado')
plt.title('Zoom em 5172.684 Å | Diferentes Velocidades de Microturbulência')
plt.legend()
plt.grid(True)
plt.show()

"""Diferentes Abundâncias de Magnésio: g0v1_Mg0 e g0v1_Mg8"""

# MG 0 E MG8

# Parâmetros fixos
teff = 8000
asalog = 0.0
llzero = 5150.0
llfin = 5200.0
glog = 0.0
vvt = 1.0

# Parâmetros que divergem
mg0 = 7.55
mg8 = 8.3

# Carregar os dados dos espectros
wavelengths_g0_v1_Mg0, flux_g0_v1_Mg0 = np.loadtxt('f_g0_v1_Mg0.spec.nulbad.0.050', unpack=True)
wavelengths_g0_v1_Mg8, flux_g0_v1_Mg8 = np.loadtxt('f_g0_v1_Mg8.spec.nulbad.0.050', unpack=True)

# Normalizar os fluxos
flux_g0_v1_Mg0 /= np.max(flux_g0_v1_Mg0)
flux_g0_v1_Mg8 /= np.max(flux_g0_v1_Mg8)

# Criar o gráfico para ambos os espectros normalizados
plt.figure(figsize=(10, 6))

plt.plot(wavelengths_g0_v1_Mg0, flux_g0_v1_Mg0, color='dodgerblue', linewidth=0.8, label='g0_v1 = Mg0')
plt.plot(wavelengths_g0_v1_Mg8, flux_g0_v1_Mg8, color='deeppink', linewidth=0.8, label='g0_v1 = Mg8')

plt.xlabel("Comprimento de Onda (Å)")
plt.ylabel('Fluxo Normalizado')
plt.title('Espectros com Diferentes Abundâncias de Magnésio')
plt.legend()
plt.grid(True)
plt.show()

#ZOOOOMMM

# Parâmetros fixos
teff = 8000
asalog = 0.0
llzero = 5150.0
llfin = 5200.0
glog = 0.0
vvt = 1.0

# Parâmetros que divergem
mg0 = 7.55
mg8 = 8.3

# Carregar os dados dos espectros
wavelengths_g0_v1_Mg0, flux_g0_v1_Mg0 = np.loadtxt('f_g0_v1_Mg0.spec.nulbad.0.050', unpack=True)
wavelengths_g0_v1_Mg8, flux_g0_v1_Mg8 = np.loadtxt('f_g0_v1_Mg8.spec.nulbad.0.050', unpack=True)

# Normalizar os fluxos
flux_g0_v1_Mg0 /= np.max(flux_g0_v1_Mg0)
flux_g0_v1_Mg8 /= np.max(flux_g0_v1_Mg8)

# Definir a região de zoom em torno de 5172.684 Å
zoom_wavelength_start = 5170.0
zoom_wavelength_end = 5175.0

# Encontrar os índices correspondentes à região de zoom
zoom_indices_g0_v1_Mg0 = np.where((wavelengths_g0_v1_Mg0 >= zoom_wavelength_start) & (wavelengths_g0_v1_Mg0 <= zoom_wavelength_end))
zoom_indices_g0_v1_Mg8 = np.where((wavelengths_g0_v1_Mg8 >= zoom_wavelength_start) & (wavelengths_g0_v1_Mg8 <= zoom_wavelength_end))

# Criar o gráfico para ambos os espectros com zoom na região desejada
plt.figure(figsize=(10, 6))

plt.plot(wavelengths_g0_v1_Mg0[zoom_indices_g0_v1_Mg0], flux_g0_v1_Mg0[zoom_indices_g0_v1_Mg0], color='dodgerblue', linewidth=1.2, label='g0_v1 = Mg0')
plt.plot(wavelengths_g0_v1_Mg8[zoom_indices_g0_v1_Mg8], flux_g0_v1_Mg8[zoom_indices_g0_v1_Mg8], color='deeppink', linewidth=1.2, label='g0_v1 = Mg8')

plt.xlabel("Comprimento de Onda (Å)")
plt.ylabel('Fluxo Normalizado')
plt.title('Zoom em 5172.684 Å | Diferentes Abundâncias de Magnésio')
plt.legend()
plt.grid(True)
plt.show()

"""Diferentes Velocidades de Microturbulência e Mesma Gravidade: g0v1 e g0v3"""

#G0V1 E G0V3

# Parâmetros fixos
teff = 8000
asalog = 0.0
llzero = 5150.0
llfin = 5200.0
mg = 7.55
glog = 5.0

# Parâmetros que divergem
vvt_g0v1 = 1.0
vvt_g0v3 = 3.0

# Carregar os dados dos espectros
wavelengths_g0_v1_Mg0, flux_g0_v1_Mg0 = np.loadtxt('f_g0_v1_Mg0.spec.nulbad.0.050', unpack=True)
wavelengths_g0_v3_Mg0, flux_g0_v3_Mg0 = np.loadtxt('f_g0_v3_Mg0.spec.nulbad.0.050', unpack=True)

# Normalizar os fluxos
flux_g0_v1_Mg0 /= np.max(flux_g0_v1_Mg0)
flux_g0_v3_Mg0 /= np.max(flux_g0_v3_Mg0)

# Criar o gráfico para ambos os espectros normalizados
plt.figure(figsize=(10, 6))

plt.plot(wavelengths_g0_v1_Mg0, flux_g0_v1_Mg0, color='black', linewidth=0.8, label='g0_v1_Mg0 | vvt = 1.0')
plt.plot(wavelengths_g0_v3_Mg0, flux_g0_v3_Mg0, color='darkorange', linewidth=0.8, label='g0_v3_Mg8 | vvt = 3.0')

plt.xlabel("Comprimento de Onda (Å)")
plt.ylabel('Fluxo Normalizado')
plt.title('Espectros com Diferentes Velocidades de Microturbulência e Mesma Gravidade')
plt.legend()
plt.grid(True)
plt.show()

# ZOOM GLOG IGUAL VVT DIFERENTE

# Parâmetros fixos
teff = 8000
asalog = 0.0
llzero = 5150.0
llfin = 5200.0
mg = 7.55
glog = 5.0

# Parâmetros que divergem
vvt_g0v1 = 1.0
vvt_g0v3 = 3.0

# Carregar os dados dos espectros
wavelengths_g0_v1_Mg0, flux_g0_v1_Mg0 = np.loadtxt('f_g0_v1_Mg0.spec.nulbad.0.050', unpack=True)
wavelengths_g0_v3_Mg0, flux_g0_v3_Mg0 = np.loadtxt('f_g0_v3_Mg0.spec.nulbad.0.050', unpack=True)

# Normalizar os fluxos
flux_g0_v1_Mg0 /= np.max(flux_g0_v1_Mg0)
flux_g0_v3_Mg0 /= np.max(flux_g0_v3_Mg0)

# Definir a região de zoom em torno de 5172.684 Å
zoom_wavelength_start = 5170.0
zoom_wavelength_end = 5175.0

# Encontrar os índices correspondentes à região de zoom
zoom_indices_g0_v1_Mg0 = np.where((wavelengths_g0_v1_Mg0 >= zoom_wavelength_start) & (wavelengths_g0_v1_Mg0 <= zoom_wavelength_end))
zoom_indices_g0_v3_Mg0 = np.where((wavelengths_g0_v3_Mg0 >= zoom_wavelength_start) & (wavelengths_g0_v3_Mg0 <= zoom_wavelength_end))

# Criar o gráfico para ambos os espectros com zoom na região desejada
plt.figure(figsize=(10, 6))

plt.plot(wavelengths_g0_v1_Mg0[zoom_indices_g0_v1_Mg0], flux_g0_v1_Mg0[zoom_indices_g0_v1_Mg0],color='black', linewidth=1.2, label='g0_v1_Mg0 | vvt = 1.0')
plt.plot(wavelengths_g0_v3_Mg0[zoom_indices_g0_v3_Mg0], flux_g0_v3_Mg0[zoom_indices_g0_v3_Mg0], color='darkorange', linewidth=1.2, label='g0_v3_Mg8 | vvt = 3.0')


plt.xlabel("Comprimento de Onda (Å)")
plt.ylabel('Fluxo Normalizado')
plt.title('Zoom em 5172.684 Å | Diferentes Velocidades de Microturbulência')
plt.legend()
plt.grid(True)
plt.show()

"""Todos os mecanismos de alargamento de linhas, todos espectros"""

import numpy as np
import matplotlib.pyplot as plt

# Parâmetros fixos
teff = 8000
asalog = 0.0
glog = [5.0, 5.0, 0.0, 0.0, 0.0]
vvt = [1.0, 3.0, 1.0, 3.0, 1.0]
llzero = 5150.0
llfin = 5200.0

# Abundância de Magnésio (MG) para cada espectro
abundance_Mg = [7.55, 7.55, 7.55, 7.55, 8.30]

# Cores para as curvas
colors = ['tomato', 'deeppink', 'dodgerblue', 'blueviolet', 'springgreen']

# Nomes dos arquivos dos espectros
flprefix = ['g5_v1_Mg0', 'g5_v3_Mg0', 'g0_v1_Mg0', 'g0_v3_Mg0', 'g0_v1_Mg8']

# Normalizar os espectros e plotar
plt.figure(figsize=(10, 6))

for i in range(len(flprefix)):
    # Carregar os dados dos espectros
    filename = 'f_' + flprefix[i] + '.spec.nulbad.0.050'
    wavelengths, flux = np.loadtxt(filename, unpack=True)

    # Normalizar os fluxos
    flux /= np.max(flux)

    # Plotar o espectro normalizado com a cor correspondente
    plt.plot(wavelengths, flux, label=flprefix[i] + f' (MG={abundance_Mg[i]})', linewidth=0.8, color=colors[i])

plt.xlabel("Comprimento de Onda (Å)")
plt.ylabel('Fluxo Normalizado')
plt.title('Espectros Normalizados com Linhas de Magnésio')
plt.legend()
plt.grid(True)
plt.show()

# ZOOOOMMMMMMM
import numpy as np
import matplotlib.pyplot as plt

# Parâmetros fixos
teff = 8000
asalog = 0.0
glog = [5.0, 5.0, 0.0, 0.0, 0.0]
vvt = [1.0, 3.0, 1.0, 3.0, 1.0]
llzero = 5150.0
llfin = 5200.0

# Abundância de Magnésio (MG) para cada espectro
abundance_Mg = [7.55, 7.55, 7.55, 7.55, 8.30]

# Cores para as curvas
colors = ['tomato', 'deeppink', 'dodgerblue', 'blueviolet', 'springgreen']

# Nomes dos arquivos dos espectros
flprefix = ['g5_v1_Mg0', 'g5_v3_Mg0', 'g0_v1_Mg0', 'g0_v3_Mg0', 'g0_v1_Mg8']

# Normalizar os espectros e plotar com zoom em torno de 5172.684 Å
plt.figure(figsize=(10, 6))

for i in range(len(flprefix)):
    # Carregar os dados dos espectros
    filename = 'f_' + flprefix[i] + '.spec.nulbad.0.050'
    wavelengths, flux = np.loadtxt(filename, unpack=True)

    # Normalizar os fluxos
    flux /= np.max(flux)

    # Definir a região de zoom
    zoom_start = 5170.0 # Ajuste o valor inicial do zoom conforme necessário
    zoom_end = 5175.0    # Ajuste o valor final do zoom conforme necessário

    # Encontrar os índices correspondentes à região de zoom
    zoom_indices = np.where((wavelengths >= zoom_start) & (wavelengths <= zoom_end))

    # Plotar o espectro normalizado com a cor correspondente e zoom
    plt.plot(wavelengths[zoom_indices], flux[zoom_indices], label=flprefix[i] + f' (MG={abundance_Mg[i]})', linewidth=1.2, color=colors[i])

plt.xlabel("Comprimento de Onda (Å)")
plt.ylabel('Fluxo Normalizado')
plt.title('Zoom em 5172.684 Å | Espectros Normalizados com Linhas de Magnésio')
plt.legend()
plt.grid(True)
plt.show()